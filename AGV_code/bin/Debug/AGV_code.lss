
bin\Debug\AGV_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800200  00800200  00000454  2**0
                  ALLOC
  2 .fuse         00000003  00820000  00820000  00000454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000060  00000000  00000000  00000457  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000ae  00000000  00000000  000004b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d0  00000000  00000000  00000565  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ed  00000000  00000000  00000c35  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000369  00000000  00000000  00001022  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  0000138c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000022c  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000012a  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 ec       	ldi	r30, 0xC0	; 192
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	12 e0       	ldi	r17, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 30       	cpi	r26, 0x02	; 2
 11a:	b1 07       	cpc	r27, r17
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
 122:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
int north_angle = 0;
int UltrasoonRead(int sensor);
int MagnometerRead();

int main(void)
{
 12a:	df 93       	push	r29
 12c:	cf 93       	push	r28
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
    */
//-------------------------


//-zero magnometer---------
north_angle = MagnometerRead();
 132:	0e 94 ca 00 	call	0x194	; 0x194 <MagnometerRead>
 136:	90 93 01 02 	sts	0x0201, r25
 13a:	80 93 00 02 	sts	0x0200, r24
//-------------------------


    sei();
 13e:	78 94       	sei
 140:	ff cf       	rjmp	.-2      	; 0x140 <main+0x16>

00000142 <UltrasoonRead>:
    }
    return 0;
}

int UltrasoonRead(int sensor)
{
 142:	df 93       	push	r29
 144:	cf 93       	push	r28
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	28 97       	sbiw	r28, 0x08	; 8
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	f8 94       	cli
 150:	de bf       	out	0x3e, r29	; 62
 152:	0f be       	out	0x3f, r0	; 63
 154:	cd bf       	out	0x3d, r28	; 61
 156:	98 87       	std	Y+8, r25	; 0x08
 158:	8f 83       	std	Y+7, r24	; 0x07

    //-initialize variables-------
    volatile float echo=0.0;
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	a0 e0       	ldi	r26, 0x00	; 0
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	8b 83       	std	Y+3, r24	; 0x03
 164:	9c 83       	std	Y+4, r25	; 0x04
 166:	ad 83       	std	Y+5, r26	; 0x05
 168:	be 83       	std	Y+6, r27	; 0x06
    int timeout=0;
 16a:	1a 82       	std	Y+2, r1	; 0x02
 16c:	19 82       	std	Y+1, r1	; 0x01

    //-then measure pulse width---
    //----------------------------


    return echo;
 16e:	8b 81       	ldd	r24, Y+3	; 0x03
 170:	9c 81       	ldd	r25, Y+4	; 0x04
 172:	ad 81       	ldd	r26, Y+5	; 0x05
 174:	be 81       	ldd	r27, Y+6	; 0x06
 176:	bc 01       	movw	r22, r24
 178:	cd 01       	movw	r24, r26
 17a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <__fixsfsi>
 17e:	dc 01       	movw	r26, r24
 180:	cb 01       	movw	r24, r22
}
 182:	28 96       	adiw	r28, 0x08	; 8
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	cf 91       	pop	r28
 190:	df 91       	pop	r29
 192:	08 95       	ret

00000194 <MagnometerRead>:


int MagnometerRead(){
 194:	df 93       	push	r29
 196:	cf 93       	push	r28
 198:	00 d0       	rcall	.+0      	; 0x19a <MagnometerRead+0x6>
 19a:	00 d0       	rcall	.+0      	; 0x19c <MagnometerRead+0x8>
 19c:	cd b7       	in	r28, 0x3d	; 61
 19e:	de b7       	in	r29, 0x3e	; 62
    is not close to the vehicle
    this way magnets are ignored
    */
    //----------------------------

return Xvalue;
 1a0:	8d 81       	ldd	r24, Y+5	; 0x05
 1a2:	9e 81       	ldd	r25, Y+6	; 0x06
}
 1a4:	26 96       	adiw	r28, 0x06	; 6
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	cd bf       	out	0x3d, r28	; 61
 1b0:	cf 91       	pop	r28
 1b2:	df 91       	pop	r29
 1b4:	08 95       	ret

000001b6 <__fixsfsi>:
 1b6:	ac e0       	ldi	r26, 0x0C	; 12
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e1 ee       	ldi	r30, 0xE1	; 225
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__prologue_saves__+0x20>
 1c2:	69 83       	std	Y+1, r22	; 0x01
 1c4:	7a 83       	std	Y+2, r23	; 0x02
 1c6:	8b 83       	std	Y+3, r24	; 0x03
 1c8:	9c 83       	std	Y+4, r25	; 0x04
 1ca:	ce 01       	movw	r24, r28
 1cc:	01 96       	adiw	r24, 0x01	; 1
 1ce:	be 01       	movw	r22, r28
 1d0:	6b 5f       	subi	r22, 0xFB	; 251
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	0e 94 2f 01 	call	0x25e	; 0x25e <__unpack_f>
 1d8:	8d 81       	ldd	r24, Y+5	; 0x05
 1da:	82 30       	cpi	r24, 0x02	; 2
 1dc:	61 f1       	breq	.+88     	; 0x236 <__fixsfsi+0x80>
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	50 f1       	brcs	.+84     	; 0x236 <__fixsfsi+0x80>
 1e2:	84 30       	cpi	r24, 0x04	; 4
 1e4:	21 f4       	brne	.+8      	; 0x1ee <__fixsfsi+0x38>
 1e6:	8e 81       	ldd	r24, Y+6	; 0x06
 1e8:	88 23       	and	r24, r24
 1ea:	51 f1       	breq	.+84     	; 0x240 <__fixsfsi+0x8a>
 1ec:	2e c0       	rjmp	.+92     	; 0x24a <__fixsfsi+0x94>
 1ee:	2f 81       	ldd	r18, Y+7	; 0x07
 1f0:	38 85       	ldd	r19, Y+8	; 0x08
 1f2:	37 fd       	sbrc	r19, 7
 1f4:	20 c0       	rjmp	.+64     	; 0x236 <__fixsfsi+0x80>
 1f6:	6e 81       	ldd	r22, Y+6	; 0x06
 1f8:	2f 31       	cpi	r18, 0x1F	; 31
 1fa:	31 05       	cpc	r19, r1
 1fc:	1c f0       	brlt	.+6      	; 0x204 <__fixsfsi+0x4e>
 1fe:	66 23       	and	r22, r22
 200:	f9 f0       	breq	.+62     	; 0x240 <__fixsfsi+0x8a>
 202:	23 c0       	rjmp	.+70     	; 0x24a <__fixsfsi+0x94>
 204:	8e e1       	ldi	r24, 0x1E	; 30
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	82 1b       	sub	r24, r18
 20a:	93 0b       	sbc	r25, r19
 20c:	29 85       	ldd	r18, Y+9	; 0x09
 20e:	3a 85       	ldd	r19, Y+10	; 0x0a
 210:	4b 85       	ldd	r20, Y+11	; 0x0b
 212:	5c 85       	ldd	r21, Y+12	; 0x0c
 214:	04 c0       	rjmp	.+8      	; 0x21e <__fixsfsi+0x68>
 216:	56 95       	lsr	r21
 218:	47 95       	ror	r20
 21a:	37 95       	ror	r19
 21c:	27 95       	ror	r18
 21e:	8a 95       	dec	r24
 220:	d2 f7       	brpl	.-12     	; 0x216 <__fixsfsi+0x60>
 222:	66 23       	and	r22, r22
 224:	b1 f0       	breq	.+44     	; 0x252 <__fixsfsi+0x9c>
 226:	50 95       	com	r21
 228:	40 95       	com	r20
 22a:	30 95       	com	r19
 22c:	21 95       	neg	r18
 22e:	3f 4f       	sbci	r19, 0xFF	; 255
 230:	4f 4f       	sbci	r20, 0xFF	; 255
 232:	5f 4f       	sbci	r21, 0xFF	; 255
 234:	0e c0       	rjmp	.+28     	; 0x252 <__fixsfsi+0x9c>
 236:	20 e0       	ldi	r18, 0x00	; 0
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	40 e0       	ldi	r20, 0x00	; 0
 23c:	50 e0       	ldi	r21, 0x00	; 0
 23e:	09 c0       	rjmp	.+18     	; 0x252 <__fixsfsi+0x9c>
 240:	2f ef       	ldi	r18, 0xFF	; 255
 242:	3f ef       	ldi	r19, 0xFF	; 255
 244:	4f ef       	ldi	r20, 0xFF	; 255
 246:	5f e7       	ldi	r21, 0x7F	; 127
 248:	04 c0       	rjmp	.+8      	; 0x252 <__fixsfsi+0x9c>
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	50 e8       	ldi	r21, 0x80	; 128
 252:	b9 01       	movw	r22, r18
 254:	ca 01       	movw	r24, r20
 256:	2c 96       	adiw	r28, 0x0c	; 12
 258:	e2 e0       	ldi	r30, 0x02	; 2
 25a:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__epilogue_restores__+0x20>

0000025e <__unpack_f>:
 25e:	fc 01       	movw	r30, r24
 260:	db 01       	movw	r26, r22
 262:	40 81       	ld	r20, Z
 264:	51 81       	ldd	r21, Z+1	; 0x01
 266:	22 81       	ldd	r18, Z+2	; 0x02
 268:	62 2f       	mov	r22, r18
 26a:	6f 77       	andi	r22, 0x7F	; 127
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	22 1f       	adc	r18, r18
 270:	22 27       	eor	r18, r18
 272:	22 1f       	adc	r18, r18
 274:	93 81       	ldd	r25, Z+3	; 0x03
 276:	89 2f       	mov	r24, r25
 278:	88 0f       	add	r24, r24
 27a:	82 2b       	or	r24, r18
 27c:	28 2f       	mov	r18, r24
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	99 1f       	adc	r25, r25
 282:	99 27       	eor	r25, r25
 284:	99 1f       	adc	r25, r25
 286:	11 96       	adiw	r26, 0x01	; 1
 288:	9c 93       	st	X, r25
 28a:	11 97       	sbiw	r26, 0x01	; 1
 28c:	21 15       	cp	r18, r1
 28e:	31 05       	cpc	r19, r1
 290:	a9 f5       	brne	.+106    	; 0x2fc <__unpack_f+0x9e>
 292:	41 15       	cp	r20, r1
 294:	51 05       	cpc	r21, r1
 296:	61 05       	cpc	r22, r1
 298:	71 05       	cpc	r23, r1
 29a:	11 f4       	brne	.+4      	; 0x2a0 <__unpack_f+0x42>
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	37 c0       	rjmp	.+110    	; 0x30e <__unpack_f+0xb0>
 2a0:	82 e8       	ldi	r24, 0x82	; 130
 2a2:	9f ef       	ldi	r25, 0xFF	; 255
 2a4:	13 96       	adiw	r26, 0x03	; 3
 2a6:	9c 93       	st	X, r25
 2a8:	8e 93       	st	-X, r24
 2aa:	12 97       	sbiw	r26, 0x02	; 2
 2ac:	9a 01       	movw	r18, r20
 2ae:	ab 01       	movw	r20, r22
 2b0:	67 e0       	ldi	r22, 0x07	; 7
 2b2:	22 0f       	add	r18, r18
 2b4:	33 1f       	adc	r19, r19
 2b6:	44 1f       	adc	r20, r20
 2b8:	55 1f       	adc	r21, r21
 2ba:	6a 95       	dec	r22
 2bc:	d1 f7       	brne	.-12     	; 0x2b2 <__unpack_f+0x54>
 2be:	83 e0       	ldi	r24, 0x03	; 3
 2c0:	8c 93       	st	X, r24
 2c2:	0d c0       	rjmp	.+26     	; 0x2de <__unpack_f+0x80>
 2c4:	22 0f       	add	r18, r18
 2c6:	33 1f       	adc	r19, r19
 2c8:	44 1f       	adc	r20, r20
 2ca:	55 1f       	adc	r21, r21
 2cc:	12 96       	adiw	r26, 0x02	; 2
 2ce:	8d 91       	ld	r24, X+
 2d0:	9c 91       	ld	r25, X
 2d2:	13 97       	sbiw	r26, 0x03	; 3
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	13 96       	adiw	r26, 0x03	; 3
 2d8:	9c 93       	st	X, r25
 2da:	8e 93       	st	-X, r24
 2dc:	12 97       	sbiw	r26, 0x02	; 2
 2de:	20 30       	cpi	r18, 0x00	; 0
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	38 07       	cpc	r19, r24
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	48 07       	cpc	r20, r24
 2e8:	80 e4       	ldi	r24, 0x40	; 64
 2ea:	58 07       	cpc	r21, r24
 2ec:	58 f3       	brcs	.-42     	; 0x2c4 <__unpack_f+0x66>
 2ee:	14 96       	adiw	r26, 0x04	; 4
 2f0:	2d 93       	st	X+, r18
 2f2:	3d 93       	st	X+, r19
 2f4:	4d 93       	st	X+, r20
 2f6:	5c 93       	st	X, r21
 2f8:	17 97       	sbiw	r26, 0x07	; 7
 2fa:	08 95       	ret
 2fc:	2f 3f       	cpi	r18, 0xFF	; 255
 2fe:	31 05       	cpc	r19, r1
 300:	79 f4       	brne	.+30     	; 0x320 <__unpack_f+0xc2>
 302:	41 15       	cp	r20, r1
 304:	51 05       	cpc	r21, r1
 306:	61 05       	cpc	r22, r1
 308:	71 05       	cpc	r23, r1
 30a:	19 f4       	brne	.+6      	; 0x312 <__unpack_f+0xb4>
 30c:	84 e0       	ldi	r24, 0x04	; 4
 30e:	8c 93       	st	X, r24
 310:	08 95       	ret
 312:	64 ff       	sbrs	r22, 4
 314:	03 c0       	rjmp	.+6      	; 0x31c <__unpack_f+0xbe>
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	8c 93       	st	X, r24
 31a:	12 c0       	rjmp	.+36     	; 0x340 <__unpack_f+0xe2>
 31c:	1c 92       	st	X, r1
 31e:	10 c0       	rjmp	.+32     	; 0x340 <__unpack_f+0xe2>
 320:	2f 57       	subi	r18, 0x7F	; 127
 322:	30 40       	sbci	r19, 0x00	; 0
 324:	13 96       	adiw	r26, 0x03	; 3
 326:	3c 93       	st	X, r19
 328:	2e 93       	st	-X, r18
 32a:	12 97       	sbiw	r26, 0x02	; 2
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	8c 93       	st	X, r24
 330:	87 e0       	ldi	r24, 0x07	; 7
 332:	44 0f       	add	r20, r20
 334:	55 1f       	adc	r21, r21
 336:	66 1f       	adc	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	8a 95       	dec	r24
 33c:	d1 f7       	brne	.-12     	; 0x332 <__unpack_f+0xd4>
 33e:	70 64       	ori	r23, 0x40	; 64
 340:	14 96       	adiw	r26, 0x04	; 4
 342:	4d 93       	st	X+, r20
 344:	5d 93       	st	X+, r21
 346:	6d 93       	st	X+, r22
 348:	7c 93       	st	X, r23
 34a:	17 97       	sbiw	r26, 0x07	; 7
 34c:	08 95       	ret

0000034e <__prologue_saves__>:
 34e:	2f 92       	push	r2
 350:	3f 92       	push	r3
 352:	4f 92       	push	r4
 354:	5f 92       	push	r5
 356:	6f 92       	push	r6
 358:	7f 92       	push	r7
 35a:	8f 92       	push	r8
 35c:	9f 92       	push	r9
 35e:	af 92       	push	r10
 360:	bf 92       	push	r11
 362:	cf 92       	push	r12
 364:	df 92       	push	r13
 366:	ef 92       	push	r14
 368:	ff 92       	push	r15
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	cd b7       	in	r28, 0x3d	; 61
 374:	de b7       	in	r29, 0x3e	; 62
 376:	ca 1b       	sub	r28, r26
 378:	db 0b       	sbc	r29, r27
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	f8 94       	cli
 37e:	de bf       	out	0x3e, r29	; 62
 380:	0f be       	out	0x3f, r0	; 63
 382:	cd bf       	out	0x3d, r28	; 61
 384:	19 94       	eijmp

00000386 <__epilogue_restores__>:
 386:	2a 88       	ldd	r2, Y+18	; 0x12
 388:	39 88       	ldd	r3, Y+17	; 0x11
 38a:	48 88       	ldd	r4, Y+16	; 0x10
 38c:	5f 84       	ldd	r5, Y+15	; 0x0f
 38e:	6e 84       	ldd	r6, Y+14	; 0x0e
 390:	7d 84       	ldd	r7, Y+13	; 0x0d
 392:	8c 84       	ldd	r8, Y+12	; 0x0c
 394:	9b 84       	ldd	r9, Y+11	; 0x0b
 396:	aa 84       	ldd	r10, Y+10	; 0x0a
 398:	b9 84       	ldd	r11, Y+9	; 0x09
 39a:	c8 84       	ldd	r12, Y+8	; 0x08
 39c:	df 80       	ldd	r13, Y+7	; 0x07
 39e:	ee 80       	ldd	r14, Y+6	; 0x06
 3a0:	fd 80       	ldd	r15, Y+5	; 0x05
 3a2:	0c 81       	ldd	r16, Y+4	; 0x04
 3a4:	1b 81       	ldd	r17, Y+3	; 0x03
 3a6:	aa 81       	ldd	r26, Y+2	; 0x02
 3a8:	b9 81       	ldd	r27, Y+1	; 0x01
 3aa:	ce 0f       	add	r28, r30
 3ac:	d1 1d       	adc	r29, r1
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	f8 94       	cli
 3b2:	de bf       	out	0x3e, r29	; 62
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	cd bf       	out	0x3d, r28	; 61
 3b8:	ed 01       	movw	r28, r26
 3ba:	08 95       	ret

000003bc <_exit>:
 3bc:	f8 94       	cli

000003be <__stop_program>:
 3be:	ff cf       	rjmp	.-2      	; 0x3be <__stop_program>
